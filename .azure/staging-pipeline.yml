# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pr:
  branches:
    include:
    - master
    exclude:
    - release/*

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: build
    displayName: build
    jobs:
    - job: build
      steps:
        - checkout: self
          clean: true
          fetchDepth: 1
        
        - task: qetza.replacetokens.replacetokens-task.replacetokens@3
          displayName: 'Replace tokens in env'
          inputs:
            targetFiles: .env.template
            escapeType: none
            tokenPrefix: '#{'
            tokenSuffix: '}'
            actionOnMissing: fail
      
        - task: Cache@2
          inputs:
            key: 'gatsby_cache | "$(Agent.OS)"'
            restoreKeys: |
              gatsby_cache | "$(Agent.OS)"
            path: $(Build.SourcesDirectory)/.cache
          displayName: Cache Gatsby .cache
      
        - task: Cache@2
          inputs:
            key: 'gatsby_public | "$(Agent.OS)"'
            restoreKeys: |
              gatsby_public | "$(Agent.OS)"
            path: $(Build.SourcesDirectory)/public
          displayName: Cache Gatsby public
      
        - task: UseNode@1
          inputs:
            version: '13.7.x'
        
        - script: npm ci
          displayName: npm ci
        - script: npm run-script lint
          displayName: npm run-script lint
        
        - script: |
            mv .env.template .env.production
            cat .env.production
          displayName: 'Rename env file'
        
        - script: npm run-script build
          displayName: npm run-script build
      
        - task: ArchiveFiles@2
          inputs:
            rootFolderOrFile: 'public'
            includeRootFolder: false
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/public.zip'
            replaceExistingArchive: true
        
        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifact: drop'
          inputs:
            PathtoPublish: $(Build.ArtifactStagingDirectory)
      
        - task: Bash@3
          displayName: 'Deploy to https://sswrulesstaging1.firebaseapp.com/rules/'
          continueOnError: true
          inputs:
            targetType: 'inline'
            script: |
              npm install -g firebase-tools
              mkdir firebase && mv public firebase/rules
              firebase deploy --token $(FIREBASETOKEN)
          
        - task: Bash@3
          displayName: 'SSW CodeAuditor - Check broken links and performance'
          continueOnError: true
          inputs:
            targetType: 'inline'
            script: 'docker container run sswconsulting/codeauditor --token f66aadc5-cccc-4ae1-448a-c8183c723ec9 --url https://sswrulesstaging1.firebaseapp.com/rules/  --buildId $(Build.BuildNumber)'